version: "3.8"
services:

  # Docker Socket Proxy Service
  # GitHub Repository: https://github.com/Tecnativa/docker-socket-proxy
  # Docker Hub: https://hub.docker.com/r/traefik/whoami
  docker-socket-proxy:
    image: tecnativa/docker-socket-proxy
    container_name: docker-socket-proxy
    environment:
      CONTAINERS: 1
      SERVICES: 1
      NETWORKS: 1
      SOCKET: tcp://0.0.0.0:2375
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "2375:2375"
    networks:
      - traefik_nordvpn_network
    expose:
      - "2375"


  # Traefik Service     
  # GitHub Repository: https://github.com/traefik/traefik
  # Docker Hub: https://hub.docker.com/_/traefik
  traefik:
    image: traefik
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "80:80"
      - "443:443"
    environment:
      - TZ=UTC
    networks:
      - traefik_nordvpn_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.example.com`)"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.routers.traefik-secure.rule=Host(`traefik.example.com`)"
      - "traefik.http.routers.traefik-secure.entrypoints=websecure"
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.routers.traefik-secure.tls.certresolver=mytlsresolver"  # Use your TLS resolver
      - "traefik.http.services.traefik-secure.loadbalancer.server.port=8080"

  # TLS Certificate Resolver
  # GitHub Repository: https://github.com/traefik/whoami
  # Docker Hub: https://hub.docker.com/r/traefik/whoami
  tls-resolver:
    image: traefik/whoami  # Use a simple container for TLS resolver
    container_name: tls-resolver
    networks:
      - traefik_nordvpn_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tls-resolver.rule=Host(`tls-resolver.example.com`)"  # Replace with your domain
      - "traefik.http.routers.tls-resolver.entrypoints=web"
      - "traefik.http.routers.tls-resolver.tls=true"
      - "traefik.http.routers.tls-resolver.tls.certresolver=mytlsresolver"  # Use your TLS resolver

  # PiHole Service
  # GitHub Repository: https://github.com/pi-hole/docker-pi-hole
  # Docker Hub: https://hub.docker.com/r/pihole/pihole
  pihole:
    image: pihole/pihole
    container_name: pihole
    environment:
      TZ: "Your/Timezone"  # Set your timezone
      WEBPASSWORD: "YourPiholePassword"  # Set your Pi-hole web interface password
    ports:
      - "53:53/tcp"  # Expose port 53 for DNS (TCP)
      - "53:53/udp"  # Expose port 53 for DNS (UDP)
      - "67:67/udp"  # Expose port 67 for DHCP
    volumes:
      - pihole_config:/etc/pihole
      - pihole_dnsmasq:/etc/dnsmasq.d
    networks:
      - traefik_nordvpn_network
    dns:
      - 127.0.0.1
      - 1.1.1.1  # Replace with your preferred DNS server(s)
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pihole.entrypoints=websecure"
      - "traefik.http.routers.pihole.rule=Host(`pihole.example.com`)"  # Replace with your domain
      - "traefik.http.routers.pihole.tls=true"
      - "traefik.http.routers.pihole.tls.certresolver=mytlsresolver"
      - "traefik.http.services.pihole.loadbalancer.server.port=443"

  # Portainer Service
  # GitHub Repository: https://github.com/portainer/portainer
  # Docker Hub: https://hub.docker.com/r/portainer/portainer-ce 
  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - traefik_nordvpn_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.example.com`)"  # Replace with your domain
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.tls=true"
      - "traefik.http.routers.portainer.tls.certresolver=mytlsresolver"  # Use your TLS resolver
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
  
  # VPN Client Service 
  # GitHub Repository: https://github.com/bubuntux/nordvpn
  # Docker Hub: https://hub.docker.com/r/bubuntux/nordvpn/
  vpn-client:
    image: bubuntux/nordvpn
    container_name: vpn-client
    cap_add:
      - NET_ADMIN
    environment:
      - TZ=Your/Timezone  # Set your timezone
      - TOKEN=<Your Token Here>     # Required
      - CONNECT=United_States
      - NORDVPN_PROTOCOL=NordLynx  # Set the protocol to NordLynx
      - NETWORK=192.168.1.0/24  # So it can be accessed within the local network         
    volumes:
      - /config/nordvpn:/vpn
    networks:
      - traefik_nordvpn_network

  # Authentik Service 
  # GitHub Repository: https://github.com/goauthentik/authentik
  # Docker Hub: https://hub.docker.com/r/goauthentik/authentik
  authentik:
    image: authentik/authentik
    container_name: authentik
    environment:
      - DOCKER_HOST=tcp://docker-socket-proxy:2375
      - AUTHENTIK_DB=sqlite:////var/lib/authentik/authentik.db
      - AUTHENTIK_REDIS=redis://authentik-redis:6379
      - AUTHENTIK_REDIS_PREFIX=authentik
      - AUTHENTIK_CLUSTER_NAME=main
    secrets:
      - db_password
      - redis_password
    volumes:
      - authentik_data:/var/lib/authentik
    ports:
      - "8080:8080"
    networks:
      - traefik_nordvpn_network

  # GitHub Repository: https://github.com/docker-library/redis  https://github.com/docker-library/redis
  # Docker Hub: https://hub.docker.com/_/redis
  authentik-redis:
    image: redis:latest
    container_name: authentik-redis
    command: redis-server --requirepass <redis_password>
    networks:
      - traefik_nordvpn_network

  # Plex Service
  # GitHub Repository: https://github.com/plexinc/pms-docker
  # Docker Hub: https://hub.docker.com/r/plexinc/pms-docker
  plex:
    image: plexinc/pms-docker:latest
    container_name: plex
    environment:
      - PLEX_UID=<your_plex_uid>
      - PLEX_GID=<your_plex_gid>
    volumes:
      - <path_to_plex_config>:/config
      - <path_to_media_files>:/data
    ports:
      - "32400:32400"
    networks:
      - traefik_nordvpn_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.plex.rule=Host(`plex.example.com`)"  # Replace with your domain
      - "traefik.http.routers.plex.entrypoints=websecure"
      - "traefik.http.routers.plex.tls=true"
      - "traefik.http.routers.plex.tls.certresolver=mytlsresolver"  # Use your TLS resolver

  # Bazarr Service
  # GitHub Repository: https://github.com/morpheus65535/bazarr  https://github.com/linuxserver/docker-bazarr
  # Docker Hub: https://hub.docker.com/r/linuxserver/bazarr
  bazarr:
    image: linuxserver/bazarr
    container_name: bazarr
    environment:
      - PUID=<your_puid>
      - PGID=<your_pgid>
    volumes:
      - <path_to_bazarr_config>:/config
      - <path_to_media_files>:/media
    networks:
      - traefik_nordvpn_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bazarr.rule=Host(`bazarr.example.com`)"  # Replace with your domain
      - "traefik.http.routers.bazarr.entrypoints=websecure"
      - "traefik.http.routers.bazarr.tls=true"
      - "traefik.http.routers.bazarr.tls.certresolver=mytlsresolver"  # Use your TLS resolver

  # Sonarr service
  # GitHub Repository: https://github.com/Sonarr/Sonarr   https://github.com/Sonarr/Sonarr
  # Docker Hub: https://hub.docker.com/r/linuxserver/sonarr
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=<sonarr_puid>
      - PGID=<sonarr_pgid>
    volumes:
      - <path_to_sonarr_config>:/config
      - <path_to_media_files>:/tv
    # ports:
    #   - "8989:8989"
    networks:
      - traefik_nordvpn_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.example.com`)"  # Replace with your domain
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls=true"
      - "traefik.http.routers.sonarr.tls.certresolver=mytlsresolver"  # Use your TLS resolver

  # Radarr service
  # GitHub Repository: https://github.com/Radarr/Radarr   https://github.com/linuxserver/docker-radarr
  # Docker Hub: https://hub.docker.com/r/linuxserver/radarr
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=<radarr_puid>
      - PGID=<radarr_pgid>
    volumes:
      - <path_to_radarr_config>:/config
      - <path_to_media_files>:/movies
    # ports:
    #   - "7878:7878"
    networks:
      - traefik_nordvpn_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.example.com`)"  # Replace with your domain
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.tls=true"
      - "traefik.http.routers.radarr.tls.certresolver=mytlsresolver"  # Use your TLS resolver

  # Lidarr service
  # GitHub Repository: https://github.com/Lidarr/Lidarr  https://github.com/linuxserver/docker-lidarr
  # Docker Hub: https://hub.docker.com/r/linuxserver/lidarr
  lidarr:
    image: linuxserver/lidarr
    container_name: lidarr
    environment:
      - PUID=<your_puid>
      - PGID=<your_pgid>
    volumes:
      - <path_to_lidarr_config>:/config
      - <path_to_music_library>:/music
    # ports:
    #   - "8686:8686"
    networks:
      - traefik_nordvpn_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lidarr.rule=Host(`lidarr.example.com`)"  # Replace with your domain
      - "traefik.http.routers.lidarr.entrypoints=websecure"
      - "traefik.http.routers.lidarr.tls=true"
      - "traefik.http.routers.lidarr.tls.certresolver=mytlsresolver"  # Use your TLS resolver

  # Overserr service
  # GitHub Repository: https://github.com/sct/overseerr  https://github.com/linuxserver/docker-overseerr
  # Docker Hub: https://github.com/linuxserver/docker-overseerr
  overserr:
    image: linuxserver/overseerr:latest
    container_name: overserr
    environment:
      - PUID=<your_puid>
      - PGID=<your_pgid>
      - TZ=Your/Timezone  # Set your timezone
    volumes:
      - <path_to_overserr_config>:/config
    networks:
      - traefik_nordvpn_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.overserr.rule=Host(`overserr.example.com`)"  # Replace with your domain
      - "traefik.http.routers.overserr.entrypoints=websecure"
      - "traefik.http.routers.overserr.tls=true"
      - "traefik.http.routers.overserr.tls.certresolver=mytlsresolver"  # Use your TLS resolver

  # Lazy Librarian service 
  # GitHub Repository: https://gitlab.com/LazyLibrarian/LazyLibrarian   https://github.com/linuxserver/docker-lazylibrarian
  # Docker Hub: https://hub.docker.com/r/linuxserver/lazylibrarian
  lazylibrarian:
    image: linuxserver/lazylibrarian
    container_name: lazylibrarian
    environment:
      - PUID=<your_puid>
      - PGID=<your_pgid>
      - TZ=Your/Timezone  # Set your timezone
    volumes:
      - <path_to_lazylibrarian_config>:/config
      - <path_to_ebook_library>:/books
    # ports:
    #   - "5299:5299"
    networks:
      - traefik_nordvpn_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lazylibrarian.rule=Host(`lazylibrarian.example.com`)"  # Replace with your domain
      - "traefik.http.routers.lazylibrarian.entrypoints=websecure"
      - "traefik.http.routers.lazylibrarian.tls=true"
      - "traefik.http.routers.lazylibrarian.tls.certresolver=mytlsresolver"  # Use your TLS resolver

  # Homer service
  # GitHub Repository:  https://github.com/bastienwirtz/homer
  # Docker Hub: https://hub.docker.com/r/b4bz/homer
  homer:
    image: b4bz/homer:latest
    container_name: homer
    volumes:
      - <path_to_homer_config>:/www-data/config
    networks:
      - traefik_nordvpn_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.homer.rule=Host(`homer.example.com`)"  # Replace with your domain
      - "traefik.http.routers.homer.entrypoints=websecure"
      - "traefik.http.routers.homer.tls=true"
      - "traefik.http.routers.homer.tls.certresolver=mytlsresolver"  # Use your TLS resolver

  # Prometheus Service 
  # GitHub Repository: https://github.com/prometheus/prometheus
  # Docker Hub: https://hub.docker.com/r/prom/prometheus

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - <path_to_prometheus_data>:/prometheus
    command:
      - --config.file=/prometheus/prometheus.yml
    networks:
      - traefik_nordvpn_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.example.com`)"  # Replace with your domain
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls=true"
      - "traefik.http.routers.prometheus.tls.certresolver=mytlsresolver"  # Use your TLS resolver
    # ports:
    #   - "9090:9090"

  # Grafana Service 
  # GitHub Repository: https://github.com/grafana/grafana
  # Docker Hub: https://hub.docker.com/r/grafana/grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - <path_to_grafana_data>:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=<your_admin_user>
      - GF_SECURITY_ADMIN_PASSWORD=<your_admin_password>
    networks:
      - traefik_nordvpn_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.example.com`)"  # Replace with your domain
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.tls.certresolver=mytlsresolver"  # Use your TLS resolver
    # ports:
    #   - "3000:3000"

networks:
  traefik_nordvpn_network:
    external: true

secrets:
  db_password:
    external: true
  redis_password:
    external: true

volumes:
  authentik_data:
  pihole_config: